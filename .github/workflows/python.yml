name: Python Integration

on:
  push:
    branches: [ main, develop ]
    paths: 
      - 'python/**'
      - 'pyproject.toml'
      - 'setup.py'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'python/**'
      - 'pyproject.toml'
      - 'setup.py'

jobs:
  test-python:
    name: Test Python Bindings
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        exclude:
          # Reduce CI load
          - os: windows-latest
            python-version: '3.8'
          - os: macos-latest
            python-version: '3.8'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install maturin
      run: pip install maturin[patchelf]

    - name: Install Python dependencies
      run: |
        pip install numpy pytest torch
        pip install -e .

    - name: Run Python tests
      run: pytest python/tests/ -v

    - name: Test NumPy compatibility
      run: python python/examples/numpy_compat.py

    - name: Benchmark against PyTorch
      run: python python/benchmarks/vs_pytorch.py

  build-wheels:
    name: Build Python Wheels
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        command: build
        args: --release --out dist --find-interpreter

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  publish-python:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: [test-python, build-wheels]

    steps:
    - uses: actions/checkout@v4

    - name: Download wheels
      uses: actions/download-artifact@v3
      with:
        name: wheels
        path: dist

    - name: Publish to PyPI
      uses: PyO3/maturin-action@v1
      env:
        MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      with:
        command: upload
        args: --skip-existing dist/* 